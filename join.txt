ESERCIZIO 'JOIN':

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia:
SELECT  `students`.`id`, `students`.`name`, `students`.`surname`, `students`.`registration_number`, `degrees`.`name` AS `degree`
FROM `students`
JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia';


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze:
SELECT `departments`.`name` AS `department`, `degrees`.`name` AS `degree_name`, `degrees`.`level` AS `degree_level`, `degrees`.`id` AS `degree_id`
FROM `degrees`
JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE `level` = 'magistrale'
AND `departments`.`name` = 'Dipartimento di Neuroscienze';


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44):
SELECT `course_teacher`.`teacher_id` AS `teacher_id`, `teachers`.`name` AS `teacher_name`, `teachers`.`surname` AS `teacher_surname`, `course_teacher`.`course_id` AS `course_id`, `courses`.`name` AS `course_name`
FROM `course_teacher`
JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
WHERE `teacher_id` = 44;


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome:
SELECT `students`.`id` AS `student_id`, `students`.`surname` AS `student_surname`, `students`.`name` AS `student_name`, `students`.`registration_number`, `degrees`.`name` AS `degree_name`, `degrees`.`level` AS `degree_level`, `departments`.`name` AS `department`
FROM `students`
JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id`
JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
ORDER BY `student_surname` ASC;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti:
SELECT `degrees`.`id` AS `degree_id`, `degrees`.`name` AS `degree_name`, `course_teacher`.`teacher_id` AS `teacher_id`, `teachers`.`name` AS `teacher_name`, `teachers`.`surname` AS `teacher_surname`, `course_teacher`.`course_id` AS `course_id`, `courses`.`name` AS `course_name`
FROM `course_teacher`
JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
JOIN `degrees` ON `courses`.`degree_id` = `degrees`.`id`  
ORDER BY `degree_id` ASC


6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54):
SELECT DISTINCT `course_teacher`.`teacher_id` AS `teacher_id`, `teachers`.`surname` AS `teacher_surname`, `teachers`.`name` AS `teacher_name`, `departments`.`name` AS `department_name`
FROM `course_teacher`
JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
JOIN `degrees` ON `courses`.`degree_id` = `degrees`.`id`  
JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = 'Dipartimento di Matematica'
ORDER BY `teacher_surname` ASC;

-Soluzione alternativa con COUNT:
SELECT COUNT(DISTINCT `teachers`.`id`) AS `teachers_number`
FROM `course_teacher`
JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
JOIN `degrees` ON `courses`.`degree_id` = `degrees`.`id`  
JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = 'Dipartimento di Matematica';


7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18:
SELECT `students`.`id` AS `student_id`, `students`.`surname` AS `student_surname`, `students`.`name` AS `student_name`, `students`.`registration_number`, COUNT(*) AS `exam_attempts`, MAX(`exam_student`.`vote`) AS `highest_vote`
FROM `exam_student`
JOIN `exams` ON `exam_student`.`exam_id` = `exams`.`id`
JOIN `students` ON `exam_student`.`student_id` = `students`.`id`
JOIN `courses` ON `exams`.`course_id` = `courses`.`id` 
WHERE `exam_student`.`vote` >= 18
GROUP BY `exam_student`.`student_id` ASC;

-Soluzione alternativa
SELECT COUNT(`exam_student`.`exam_id`) AS `exam_attempts`, `students`.`id` AS `students_id`, `students`.`name` AS `students_name`, `students`.`surname` AS `student_surname`, `students`.`registration_number`, `courses`.`name` AS `course_name`, MAX(`exam_student`.`vote`) AS `highest_vote`
FROM `students`
JOIN `exam_student` ON `students`.`id` = `exam_student`.`exam_id`
JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
JOIN `courses` ON `courses`.`id` = `exams`.`course_id` 
WHERE `exam_student`.`vote` >= 18
GROUP BY `students_id`, `students`.`surname`, `students_name`, `courses`.`id`, `course_name`
ORDER BY `students`.`id`;

-Soluzione alternativa: suddivide in base a ogni esame sostenuto da ogni studente, facendo differenza tra corsi diversi.
SELECT `students`.`id` AS `student_id`, `students`.`surname` AS `student_surname`, `students`.`name` AS `student_name`, `exams`.`id` AS `exam_id`, `courses`.`name` AS `course_name`, COUNT(`exam_student`.`vote`) AS `exam_attempts`, MAX(`exam_student`.`vote`) AS `highest_vote`
FROM `students` 
JOIN `exam_student` ON `students`.`id` = `exam_student`.`student_id`
JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
JOIN `courses` ON `courses`.`id` = `exams`.`course_id` 
WHERE `exam_student`.`vote` >= 18
GROUP BY `student_id`, `student_surname`, `exam_id`;
